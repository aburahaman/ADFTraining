{
	"name": "df_dimCustomer_SCD2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerSourceV1",
						"type": "DatasetReference"
					},
					"name": "CustomerSource"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerV1",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomerV1",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "LS_BLOB_Training0928",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "DimCustomerV1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "AddingIsActive"
				},
				{
					"name": "AliasName"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "ExistingRows"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerSource",
				"source(output(",
				"          SurrKey as integer,",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          IsActive as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimCustomer",
				"CustomerSource derive(IsActive = 1,",
				"          InsertedDate = currentTimestamp(),",
				"          ModifiedDate = currentTimestamp()) ~> AddingIsActive",
				"DimCustomer select(mapColumn(",
				"          LKP_SurrKey = SurrKey,",
				"          LKP_CustomerID = CustomerID,",
				"          LKP_Title = Title,",
				"          LKP_FirstName = FirstName,",
				"          LKP_MiddleName = MiddleName,",
				"          LKP_LastName = LastName,",
				"          LKP_Suffix = Suffix,",
				"          LKP_CompanyName = CompanyName,",
				"          LKP_SalesPerson = SalesPerson,",
				"          LKP_EmailAddress = EmailAddress,",
				"          LKP_Phone = Phone,",
				"          LKP_InsertedDate = InsertedDate,",
				"          LKP_ModifiedDate = ModifiedDate,",
				"          LKP_IsActive = IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AliasName",
				"CustomerSource, AliasName lookup(CustomerID == LKP_CustomerID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(!isNull(LKP_CustomerID)) ~> ExistingRows",
				"ExistingRows select(mapColumn(",
				"          CustomerID,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Suffix,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone,",
				"          LKP_SurrKey,",
				"          LKP_CustomerID,",
				"          LKP_Title,",
				"          LKP_FirstName,",
				"          LKP_MiddleName,",
				"          LKP_LastName,",
				"          LKP_Suffix,",
				"          LKP_CompanyName,",
				"          LKP_SalesPerson,",
				"          LKP_EmailAddress,",
				"          LKP_Phone,",
				"          LKP_InsertedDate,",
				"          LKP_ModifiedDate,",
				"          LKP_IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(lkp_IsaC = ERROR_FUNCTION('')) ~> derivedColumn1",
				"derivedColumn1 alterRow(updateIf(1==1)) ~> alterRow1",
				"AddingIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SurrKey as integer,",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          IsActive as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Suffix,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone,",
				"          InsertedDate,",
				"          ModifiedDate,",
				"          IsActive",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SurrKey as integer,",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          IsActive as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['LKP_SurrKey'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SurrKey = LKP_SurrKey,",
				"          CustomerID = LKP_CustomerID,",
				"          Title = LKP_Title,",
				"          FirstName = LKP_FirstName,",
				"          MiddleName = LKP_MiddleName,",
				"          LastName = LKP_LastName,",
				"          Suffix = LKP_Suffix,",
				"          CompanyName = LKP_CompanyName,",
				"          SalesPerson = LKP_SalesPerson,",
				"          EmailAddress = LKP_EmailAddress,",
				"          Phone = LKP_Phone,",
				"          ModifiedDate = LKP_ModifiedDate,",
				"          IsActive = LKP_IsActive",
				"     )) ~> sink2"
			]
		}
	}
}