{
	"name": "df_agg_derive",
	"properties": {
		"description": "dataflow is created to learn aggregator and derived activity. ",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Movies_DS1",
						"type": "DatasetReference"
					},
					"name": "MoviesV1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MoviesOpCSV",
						"type": "DatasetReference"
					},
					"name": "MoviesClean",
					"rejectedDataLinkedService": {
						"referenceName": "LS_BLOB_Training0928",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "MoviesOpCSV",
						"type": "DatasetReference"
					},
					"name": "MoviesCountYear",
					"rejectedDataLinkedService": {
						"referenceName": "LS_BLOB_Training0928",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "ExtractYearTitle"
				},
				{
					"name": "RatingByYear",
					"description": "Aggregating data by 'year' producing columns 'MoviesCnt'"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesV1",
				"MoviesV1 derive(Year = toInteger(trim(right(title,6),'()')),",
				"          title = toString(left(title, length(title)-6))) ~> ExtractYearTitle",
				"ExtractYearTitle aggregate(groupBy(Year),",
				"     MoviesCnt = count(Year)) ~> RatingByYear",
				"ExtractYearTitle sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MoviesClean.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'errors',",
				"     partitionBy('hash', 1)) ~> MoviesClean",
				"RatingByYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MovieCountByYear.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesCountYear"
			]
		}
	}
}