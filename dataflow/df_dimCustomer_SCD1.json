{
	"name": "df_dimCustomer_SCD1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerSource",
						"type": "DatasetReference"
					},
					"name": "CustomerSource"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "CreateHashKey"
				},
				{
					"name": "exists"
				},
				{
					"name": "lookupCustomerID"
				},
				{
					"name": "SetDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerSource",
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimCustomer",
				"CustomerSource derive(HashKey = sha2(256, iifNull(Title,'')+iifNull(FirstName,'')+iifNull(MiddleName,'')+iifNull(LastName,'')+iifNull(Suffix,'')+iifNull(CompanyName,'')+iifNull(SalesPerson,'')+iifNull(EmailAddress,'')+iifNull(Phone,''))) ~> CreateHashKey",
				"CreateHashKey, DimCustomer exists(CreateHashKey@HashKey == DimCustomer@HashKey,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists",
				"exists, DimCustomer lookup(CustomerSource@CustomerID == DimCustomer@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCustomerID",
				"lookupCustomerID derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(),{InsertedDate})) ~> SetDate"
			]
		}
	}
}